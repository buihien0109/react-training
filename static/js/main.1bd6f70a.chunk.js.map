{"version":3,"sources":["components/Status.js","components/Question.js","components/Popup.js","components/Loading.js","App.js","serviceWorker.js","index.js"],"names":["Status","props","progress","time","ProgressBar","Percent","className","style","width","aria-hidden","currentQuestion","totalQuestion","Question","LABEL_ANSWER","this","quizzes","userSelectClass","isSelectAnswer","onSelectQuestion","onNextQuestion","onEndQuiz","quiz","btnNextQuestion","onClick","btnEndQuiz","question","answers","map","answer","index","key","answerTrue","length","React","Component","Popup","title","text","buttonText","total","score","isStart","onPopupHandle","Loading","App","countdownTime","state","interval","setInterval","setState","clearInterval","isPopup","startQuiz","endQuiz","selectQuestion","newUserSelectClass","selectClass","i","nextQuestion","popupHandle","isLoading","setTimeout","reset","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1bd6f70a.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Status(props) {\n\tconst progress = (props.time / 60) * 100;\n\tlet ProgressBar = \"ProgressBar\"\n\tlet Percent = \"Percent\"\n\tif(props.time <= 20) {\n\t\tProgressBar += \" ProgressBar-Danger\"\n\t\tPercent += \" Percent-Danger\"\n\t}\n\treturn (\n\t\t<div className=\"Header\">\n\t\t\t<div className=\"LeftSide\">\n\t\t\t\t<div className={ProgressBar} style={{ width: (progress * 350) / 100 }}>\n\t\t\t\t\t<span className={Percent}>\n\t\t\t\t\t\t<i className=\"fa fa-hourglass-start\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t{props.time}s\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"RightSide\">\n\t\t\t\t<div className=\"CurrentQuestion\">{props.currentQuestion + 1}/{props.totalQuestion}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Status;\n","import React from \"react\";\n\nclass Question extends React.Component {\n  render() {\n    const LABEL_ANSWER = [\"A\", \"B\", \"C\", \"D\"];\n\n    const {\n      quizzes,\n      currentQuestion,\n      userSelectClass,\n      isSelectAnswer,\n      onSelectQuestion,\n      onNextQuestion,\n      onEndQuiz\n    } = this.props;\n\n    const quiz = quizzes[currentQuestion];\n\n    const btnNextQuestion = (\n      <button\n        className=\"Button ButtonSmall btn btn-secondary\"\n        onClick={onNextQuestion}\n      >\n        CÂU TIẾP THEO\n      </button>\n    );\n\n    const btnEndQuiz = (\n      <button\n        className=\"Button ButtonSmall btn btn-secondary\"\n        onClick={onEndQuiz}\n      >\n        KẾT THÚC\n      </button>\n    );\n\n    return (\n      <main>\n        <div className=\"Body\">\n          <div className=\"Question\">\n            {currentQuestion + 1}. {quiz.question}\n          </div>\n\n          <div className=\"PossibleAnswers\">\n            {quiz.answers.map((answer, index) => (\n              <div\n                className={userSelectClass[index]}\n                key={index}\n                onClick={() => {\n                  onSelectQuestion(index, answer, quiz.answerTrue);\n                }}\n              >\n                <div className=\"AnswerIndex\">{LABEL_ANSWER[index]}</div>\n                <div className=\"AnswerContent\">{answer}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"Footer\">\n          {currentQuestion === quizzes.length - 1\n            ? btnEndQuiz\n            : isSelectAnswer === true\n            ? btnNextQuestion\n            : \"\"}\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Question;\n","import React from \"react\";\n\nclass Popup extends React.Component {\n\n  render() {\n    const { total, score, isStart, time } = this.props;\n    let title, text, buttonText\n    if(isStart) {\n        title = \"Chúc mừng bạn đã hoàn thành bài kiểm tra\"\n        text = \"Bạn đạt \" + score + \"/\" + total +\" câu hỏi trong thời gian \" + time + \"s\"\n        buttonText = \"CHƠI LẠI\"\n    } else {\n        title = \"Bạn hiểu đất nước Việt Nam của mình đến đâu?\"\n        text = \"Bạn có phải là một người yêu nước, kiến thức của bạn về nước ta rộng lớn đến đâu? Tham gia làm bài test IQ để biết bạn hiểu đất nước Việt Nam của mình đến đâu? Chúc các bạn làm bài vui vẻ! \"\n        buttonText = \"BẮT ĐẦU NGAY\"\n    }\n    return (\n      <div className=\"popup-container\">\n        <div className=\"container\">\n          <div className=\"col-md-8 mr-auto ml-auto\">\n            <div className=\"popup\">\n              <h1>{title}</h1>\n              <p>{text}</p>\n              <button className=\"fancy-btn\" onClick={this.props.onPopupHandle}>\n                {buttonText}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Popup;\n","import React from \"react\";\n\nclass Loading extends React.Component {\n  render() {\n    return (\n      <div className=\"modal-loading\">\n        <div className=\"caption\">loading...</div>\n        <div className=\"animation\" />\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Status from \"./components/Status\";\nimport Question from \"./components/Question\";\nimport Popup from \"./components/Popup\";\nimport Loading from \"./components/Loading\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quizzes: [\n        {\n          question: \"Thủ đô của Việt Nam là?\",\n          answers: [\"Hà Nội\", \"Hải Phòng\", \"Thành phố Hồ Chí Minh\", \"Đà Nẵng\"],\n          answerTrue: \"Hà Nội\"\n        },\n        {\n          question: \"Việt Nam nằm trong khu vực nào của châu Á?\",\n          answers: [\"Đông Á\", \"Đông Nam Á\", \"Nam Á\", \"Tây Á\"],\n          answerTrue: \"Đông Nam Á\"\n        },\n        {\n          question: \"Quốc hoa của Việt Nam là gì\",\n          answers: [\"Hoa Hồng\", \"Hoa Tulip\", \"Hoa Sen\", \"Hoa Hướng Dương\"],\n          answerTrue: \"Hoa Sen\"\n        },\n        {\n          question: \"Nước ta có bao nhiêu dân tộc đang sinh sống?\",\n          answers: [\"56\", \"52\", \"54\", \"57\"],\n          answerTrue: \"54\"\n        },\n        {\n          question: \"Tỉnh nào có nhiều thành phố nhất Việt Nam?\",\n          answers: [\n            \"Hà Nội\",\n            \"Hải Phòng\",\n            \"Thành phố Hồ Chí Minh\",\n            \"Quảng Ninh\"\n          ],\n          answerTrue: \"Quảng Ninh\"\n        },\n        {\n          question: \"Tòa nhà nào cao nhất Việt Nam??\",\n          answers: [\n            \"Keangnam Landmark\",\n            \"Lotte\",\n            \"Landmark 81\",\n            \"Tháp Bitexco\"\n          ],\n          answerTrue: \"Landmark 81\"\n        },\n        {\n          question: \"Ngọn núi nào cao nhất Việt Nam?\",\n          answers: [\n            \"Phan Xi Păng\",\n            \"Tà Chì Nhù\",\n            \"Bạch Mộc Lương Tử\",\n            \"Putaleng\"\n          ],\n          answerTrue: \"Phan Xi Păng\"\n        },\n        {\n          question: \"Cực Bắc nước ta nằm ở tỉnh nào?\",\n          answers: [\"Quảng Ninh\", \"Hà Giang\", \"Khánh Hòa\", \"Đà Nẵng\"],\n          answerTrue: \"Hà Giang\"\n        },\n        {\n          question: \"Hang động tự nhiên lớn nhất thế giới là?\",\n          answers: [\n            \"Hang Thiên Đường\",\n            \"Động Phong Nha\",\n            \"Hang Sơn Đoòng\",\n            \"Bích Động\"\n          ],\n          answerTrue: \"Hang Sơn Đoòng\"\n        },\n        {\n          question: \"Thánh địa Mỹ Sơn nằm ở tỉnh nào sau đây?\",\n          answers: [\"Ninh Thuận\", \"Bình Thuận\", \"Quảng Nam\", \"Quảng Bình\"],\n          answerTrue: \"Ninh Thuận\"\n        }\n      ],\n      currentQuestion: 0,\n      score: 0,\n      time: 60,\n      userSelectClass: [\"Answer\", \"Answer\", \"Answer\", \"Answer\"],\n      isSelectAnswer: false,\n      isPopup: true,\n      isStart: false,\n      isLoading: false,\n      interval: null\n    };\n  }\n  //Đếm ngược thời gian\n  countdownTime = () => {\n    let { quizzes, currentQuestion, time } = this.state;\n    if (currentQuestion < quizzes.length - 1) {\n      //Đếm ngược thời gian 60s\n      let interval = setInterval(() => {\n        time--;\n        this.setState({\n          time: time\n        });\n        if (time === 0) {\n          clearInterval(this.state.interval)\n          this.setState({\n            isPopup: true\n          });\n        }\n      }, 1000);\n      this.setState({\n        interval: interval\n      });\n    }\n  };\n\n  //Bắt đầu bài Quiz\n  startQuiz = () => {\n    this.setState({\n      isPopup: false\n    });\n    this.countdownTime();\n  };\n\n  //Kết thúc bài Quiz\n  endQuiz = () => {\n    clearInterval(this.state.interval);\n    this.setState({\n      isPopup: true\n    });\n  };\n\n  //Chọn câu Trả Lời\n  selectQuestion = (index, answer, answerTrue) => {\n    if (!this.state.isSelectAnswer) {\n      // Highlight đáp án người dùng chọn\n      // TODO: Hiển thị đáp án đúng sai và tính điểm\n      let { score, userSelectClass } = this.state;\n      const newUserSelectClass = userSelectClass.map((selectClass, i) => {\n        if (i === index) {\n          if (answer === answerTrue) {\n            selectClass = \"Answer true\";\n            score++;\n          } else {\n            selectClass = \"Answer false\";\n          }\n        }\n        return selectClass;\n      });\n\n      this.setState({\n        score: score,\n        userSelectClass: newUserSelectClass,\n        isSelectAnswer: true\n      });\n    }\n  };\n\n  // Chuyển câu hỏi kế tiếp\n  nextQuestion = () => {\n    // Nếu chưa phải câu hỏi cuối cùng thì mới chuyển câu hỏi kế tiếp\n    if (this.state.currentQuestion < this.state.quizzes.length - 1) {\n      this.setState({\n        userSelectClass: [\"Answer\", \"Answer\", \"Answer\", \"Answer\"],\n        currentQuestion: this.state.currentQuestion + 1,\n        isSelectAnswer: false\n      });\n    }\n  };\n\n  //Xử lý khi hết câu hỏi và restart lại quiz\n  popupHandle = () => {\n    let { isStart, interval } = this.state;\n    //Nếu chưa bắt đầu thì cho bắt đầu còn không thì reload lại app Quiz\n    if (isStart === false) {\n      this.setState({\n        isStart: true\n      });\n      this.startQuiz();\n    } else {\n      this.setState({\n        isLoading: true //Cho Loading và sau 2s thì reload lại trang\n      });\n      setTimeout(() => {\n        clearInterval(interval);\n        this.reset();\n      }, 2000);\n    }\n  };\n\n  reset = () => {\n    this.setState({\n      currentQuestion: 0,\n      score: 0,\n      time: 60,\n      userSelectClass: [\"Answer\", \"Answer\", \"Answer\", \"Answer\"],\n      isSelectAnswer: false,\n      isPopup: true,\n      isStart: false,\n      isLoading: false,\n      interval: null\n    });\n  };\n  render() {\n    const {\n      quizzes,\n      currentQuestion,\n      score,\n      time,\n      userSelectClass,\n      isSelectAnswer,\n      isPopup,\n      isStart,\n      isLoading\n    } = this.state;\n\n    return (\n      <div className=\"App container-fluid\">\n        {isPopup ? (\n          <Popup\n            total={quizzes.length}\n            score={score}\n            time={60 - time}\n            isPopup={isPopup}\n            isStart={isStart}\n            startQuiz={this.startQuiz}\n            onPopupHandle={this.popupHandle}\n          />\n        ) : (\n          \"\"\n        )}\n\n        <div className=\"Box\">\n          <Status\n            totalQuestion={quizzes.length}\n            currentQuestion={currentQuestion}\n            time={time}\n          />\n\n          <Question\n            quizzes={quizzes}\n            currentQuestion={currentQuestion}\n            userSelectClass={userSelectClass}\n            isSelectAnswer={isSelectAnswer}\n            onSelectQuestion={this.selectQuestion}\n            onNextQuestion={this.nextQuestion}\n            onEndQuiz={this.endQuiz}\n          />\n        </div>\n        {isLoading ? <Loading /> : \"\"}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}